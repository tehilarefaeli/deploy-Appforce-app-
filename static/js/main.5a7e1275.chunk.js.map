{"version":3,"sources":["store/user/actionTypes.ts","store/user/reducer.ts","store/rootReducer.ts","store/user/actions.ts","store/user/sagas.ts","store/rootSaga.ts","store/index.ts","store/user/selectors.ts","components/addUser.tsx","components/editUser.tsx","components/card.tsx","App.tsx","index.tsx"],"names":["FETCH_USER_REQUEST","FETCH_USER_SUCCESS","FETCH_USER_FAILURE","ADD_USER_REQUEST","DELETE_USER_REQUEST","EDIT_USER_REQUEST","initialState","pending","users","error","reducer","state","action","type","payload","newState","filter","user","id","value","updateUsers","map","rootReducer","combineReducers","todoReducer","fetchUserSuccess","fetchUserFailure","fetchUserSaga","addUserSaga","userSaga","getUsers","axios","get","call","response","put","data","results","message","userdata","structureData","name","title","first","last","email","picture","medium","location","city","country","street","number","phone","all","takeLatest","rootSaga","fork","todoSaga","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","logger","run","getUsersSelector","createSelector","getPendingSelector","getErrorSelector","registerSchema","object","string","min","AddUser","useForm","resolver","zodResolver","register","formState","errors","isSubmitSuccessful","reset","handleSubmit","useEffect","dispatch","useDispatch","React","useState","open","setOpen","handleClose","Button","variant","color","className","onClick","Dialog","onClose","aria-labelledby","fullWidth","DialogContent","DialogContentText","Box","component","noValidate","autoComplete","onSubmit","values","TextField","autoFocus","margin","label","helperText","DialogActions","EditUser","exsistUser","size","userData","editUserRequest","UserCard","useSelector","classes","makeStyles","root","maxWidth","media","padding","height","backgroundSize","cardCss","minWidth","useStyles","handleDelete","deleteSuccess","Grid","container","Object","index","item","xs","sm","md","lg","Card","CardMedia","image","CardContent","Typography","gutterBottom","CardActions","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a7e1275.chunk.js","sourcesContent":["export const FETCH_USER_REQUEST = \"FETCH_USER_REQUEST\";\r\nexport const FETCH_USER_SUCCESS = \"FETCH_USER_SUCCESS\";\r\nexport const FETCH_USER_FAILURE = \"FETCH_USER_FAILURE\";\r\nexport const ADD_USER_REQUEST =\"ADD_USER_REQUEST\";\r\nexport const DELETE_USER_REQUEST = \"DELETE_USER_REQUEST\";\r\nexport const EDIT_USER_REQUEST =\"EDIT_USER_REQUEST\";\r\n\r\n\r\n","import {\r\n  FETCH_USER_REQUEST,\r\n  FETCH_USER_SUCCESS,\r\n  FETCH_USER_FAILURE,\r\n  DELETE_USER_REQUEST,\r\n  EDIT_USER_REQUEST\r\n} from \"./actionTypes\";\r\n\r\nimport { UserActions, UserState } from \"./types\";\r\n\r\nconst initialState: UserState = {\r\n  pending: false,\r\n  users: [],\r\n  error: null,\r\n};\r\n\r\nconst reducer = (state = initialState, action: UserActions) => {\r\n  switch (action.type) {\r\n    case FETCH_USER_REQUEST:\r\n      return {\r\n        ...state,\r\n        pending: true,\r\n      };\r\n    case FETCH_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        pending: false,\r\n        users: [...state.users || [], ...action.payload.users],\r\n        error: null,\r\n      };\r\n    case FETCH_USER_FAILURE:\r\n      return {\r\n        ...state,\r\n        pending: false,\r\n        users: [],\r\n        error: action.payload.error,\r\n      };\r\n\r\n      case DELETE_USER_REQUEST:\r\n      const newState = state.users.filter((user) => user.id?.value !== action.payload); \r\n      return {\r\n        ...state,\r\n        pending: false,\r\n        users:newState,\r\n        error: null\r\n      };\r\n      case EDIT_USER_REQUEST:\r\n        const updateUsers =  state.users.map(user => user.id?.value !== action.id ? user : action.payload);; \r\n      return {\r\n        ...state,\r\n        pending: false,\r\n        users:updateUsers,\r\n        error: null\r\n      };\r\n  \r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport todoReducer from \"./user/reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  user: todoReducer,\r\n});\r\n\r\nexport type AppState = ReturnType<typeof rootReducer>;\r\n\r\nexport default rootReducer;\r\n","import {\r\n  FETCH_USER_REQUEST,\r\n  FETCH_USER_FAILURE,\r\n  FETCH_USER_SUCCESS,\r\n  ADD_USER_REQUEST,\r\n  DELETE_USER_REQUEST,\r\n  EDIT_USER_REQUEST\r\n} from \"./actionTypes\";\r\nimport {\r\n  FetchUserRequest,\r\n  FetchUserSuccess,\r\n  FetchUserSuccessPayload,\r\n  FetchUserFailure,\r\n  FetchUserFailurePayload,\r\n  AddUserRequest,\r\n  IUser,\r\n  DeleteUserRequest,\r\n  EditUserRequest\r\n} from \"./types\";\r\n\r\n\r\nexport const fetchUserRequest = (): FetchUserRequest => ({\r\n  type: FETCH_USER_REQUEST,\r\n});\r\n\r\nexport const fetchUserSuccess = (\r\n  payload: FetchUserSuccessPayload\r\n): FetchUserSuccess => ({\r\n  type: FETCH_USER_SUCCESS,\r\n  payload,\r\n});\r\n\r\nexport const fetchUserFailure = (\r\n  payload: FetchUserFailurePayload\r\n): FetchUserFailure => ({\r\n  type: FETCH_USER_FAILURE,\r\n  payload,\r\n});\r\n\r\n\r\nexport const addUserRequest = (userData:any): AddUserRequest => ({\r\n    type: ADD_USER_REQUEST,\r\n    payload:userData\r\n  });\r\n\r\nexport const deleteSuccess = (id: any): DeleteUserRequest => ({\r\n  type: DELETE_USER_REQUEST,\r\n  payload: id\r\n})\r\n\r\nexport const editUserRequest = ( id:any, userData:any):EditUserRequest  => ({\r\n  type: EDIT_USER_REQUEST,\r\n  id,\r\n  payload:userData\r\n});\r\n   \r\n\r\n\r\n","import axios, { AxiosResponse } from \"axios\";\r\nimport {\r\n  all,\r\n  call,\r\n  CallEffect,\r\n  put,\r\n  PutEffect,\r\n  takeLatest,\r\n} from \"redux-saga/effects\";\r\n\r\nimport { fetchUserFailure, fetchUserSuccess } from \"./actions\";\r\nimport { FETCH_USER_REQUEST ,ADD_USER_REQUEST } from \"./actionTypes\";\r\nimport { FetchUserFailure, FetchUserSuccess, IUser} from \"./types\";\r\n\r\nconst getUsers = () =>\r\n  axios.get<IUser[]>(\"https://randomuser.me/api/?results=10\");\r\n\r\nfunction* fetchUserSaga(): Generator<\r\n  | CallEffect<AxiosResponse<IUser[]>>\r\n  | PutEffect<FetchUserSuccess>\r\n  | PutEffect<FetchUserFailure>,\r\n  void,\r\n  any\r\n> {\r\n  try {\r\n    const response = yield call(getUsers);\r\n    yield put(\r\n      fetchUserSuccess({\r\n        users: response.data.results,\r\n      })\r\n      \r\n    );\r\n  } catch (e:any) {\r\n    yield put(\r\n      fetchUserFailure({\r\n        error: e.message,\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\nfunction* addUserSaga( data :any):Generator<\r\n| CallEffect<AxiosResponse<any>>\r\n| PutEffect<FetchUserSuccess>\r\n| PutEffect<FetchUserFailure>,\r\nvoid,\r\nany\r\n>{  \r\n  const userdata=data.payload;\r\n  const structureData =[{\r\n    name:{\r\n      title:userdata.title,\r\n      first:userdata.first,\r\n      last:userdata.last\r\n    },\r\n    email:userdata.email,\r\n    picture:{\r\n      medium:'https://randomuser.me/api/portraits/med/women/31.jpg'\r\n    },\r\n    location: {\r\n      city: userdata.city,\r\n      country:userdata.country,\r\n      street:{\r\n        name:userdata.name,\r\n        number:userdata.number\r\n      }\r\n    },\r\n    id:{\r\n      value: userdata.phone\r\n\r\n    }\r\n  }]\r\n  \r\n  try{\r\n  yield put(\r\n    fetchUserSuccess({\r\n      users:structureData,\r\n    })\r\n    \r\n  );\r\n}\r\n catch (e:any) {\r\n  yield put(\r\n    fetchUserFailure({\r\n      error: e.message,\r\n    })\r\n  );\r\n}\r\n}\r\n\r\n\r\n\r\nfunction* userSaga() {\r\n  yield all([takeLatest(FETCH_USER_REQUEST, fetchUserSaga)]);\r\n  yield all([takeLatest(ADD_USER_REQUEST, addUserSaga)]);\r\n}\r\n\r\nexport default userSaga;\r\n","import { all, fork } from \"redux-saga/effects\";\r\n\r\nimport todoSaga from \"./user/sagas\";\r\n\r\nexport function* rootSaga() {\r\n  yield all([fork(todoSaga)]);\r\n}\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport logger from \"redux-logger\";\r\n\r\nimport rootReducer from \"./rootReducer\";\r\nimport { rootSaga } from \"./rootSaga\";\r\n\r\n// Create the saga middleware\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\n// Mount it on the Store\r\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware, logger));\r\n\r\n// Run the saga\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;\r\n","import { createSelector } from \"reselect\";\r\n\r\nimport { AppState } from \"../rootReducer\";\r\n\r\nconst getPending = (state: any) => state.user.pending;\r\n\r\nconst getUsers = (state: any) => state.user.users;\r\n\r\nconst getError = (state: any) => state.user.error;\r\n\r\nexport const getUsersSelector = createSelector(getUsers, (users) => users);\r\n\r\nexport const getPendingSelector = createSelector(\r\n  getPending,\r\n  (pending) => pending\r\n);\r\n\r\nexport const getErrorSelector = createSelector(getError, (error) => error);\r\n","\r\nimport React, { useEffect } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport Grid from '@mui/material/Grid';\r\nimport { addUserRequest } from \"store/user/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { useForm, SubmitHandler } from 'react-hook-form';\r\nimport {  object, string, TypeOf } from 'zod';\r\nimport { zodResolver } from '@hookform/resolvers/zod';\r\n\r\nconst registerSchema = object({\r\n    first: string()\r\n      .min(3,'First Name must be  more than 3 characters'),\r\n    last: string()\r\n      .min(3,'Last Name must be  more than 3 characters'),\r\n    title: string()\r\n      .min(1,'Title is required'),\r\n    email: string().min(1,'Email is required').email('Email is invalid'),\r\n    name: string()\r\n    .min(1,'Title is required'),\r\n    number: string()\r\n    .min(1,'Title is required'),\r\n    city: string()\r\n    .min(1,'Title is required'),\r\n    country: string()\r\n    .min(1,'Title is required'),\r\n  });\r\n  \r\n  \r\nexport type RegisterInput = TypeOf<typeof registerSchema>;\r\n\r\nexport default function AddUser() {\r\n\r\n    const {\r\n        register,\r\n        formState: { errors, isSubmitSuccessful },\r\n        reset,\r\n        handleSubmit,\r\n      } = useForm<RegisterInput>({\r\n        resolver: zodResolver(registerSchema),\r\n      });\r\n    \r\n      useEffect(() => {\r\n        if (isSubmitSuccessful) {\r\n          reset();\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      }, [isSubmitSuccessful]);\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (isSubmitSuccessful) {\r\n          reset();\r\n        }\r\n      }, [isSubmitSuccessful]);\r\n\r\n    const onSubmitHandler: SubmitHandler<RegisterInput> = (values) => {\r\n        dispatch(addUserRequest(values));\r\n        setOpen(false);\r\n      };\r\n\r\n\r\n\r\n    return (\r\n          <div>\r\n            <Button variant=\"outlined\" color=\"primary\" className=\"addService\" onClick={handleClickOpen}>\r\n                Add User\r\n            </Button>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" fullWidth>\r\n                \r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Add User\r\n                     </DialogContentText>\r\n\r\n                 <Box component='form'\r\n                     noValidate\r\n                    autoComplete='off'\r\n                        onSubmit={handleSubmit(onSubmitHandler)}>\r\n                        <TextField\r\n                            fullWidth\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"fName\"\r\n                            label=\"First Name\"\r\n                            type=\"text\"\r\n                            error={!!errors['first']}\r\n                            helperText={errors['first'] ? errors['first'].message : ''}\r\n                            {...register('first')}\r\n                        />\r\n                        <br/>\r\n\r\n                        <TextField\r\n                            autoFocus\r\n                            fullWidth\r\n                            margin=\"dense\"\r\n                            id=\"lName\"\r\n                            label=\"Last Name\"\r\n                            type=\"text\"\r\n                            error={!!errors['last']}\r\n                            helperText={errors['last'] ? errors['last'].message : ''}\r\n                            {...register('last')}\r\n                        />\r\n                        \r\n                        <br/>\r\n                        <TextField\r\n                            fullWidth\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"title\"\r\n                            label=\"Title\"\r\n                            type=\"text\"\r\n                            error={!!errors['title']}\r\n                            helperText={errors['title'] ? errors['title'].message : ''}\r\n                            {...register('title')}\r\n                        />\r\n                        <br/>\r\n                        <TextField\r\n                            fullWidth\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"email\"\r\n                            label=\"Email\"\r\n                            type=\"text\"\r\n                            error={!!errors['email']}\r\n                            helperText={errors['email'] ? errors['email'].message : ''}\r\n                            {...register('email')}\r\n                        />\r\n                        <br/>\r\n                        <TextField\r\n                            fullWidth\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"nstreet\"\r\n                            label=\"Street Name\"\r\n                            type=\"text\"\r\n                            error={!!errors['name']}\r\n                            helperText={errors['name'] ? errors['name'].message : ''}\r\n                            {...register('name')}\r\n                        />\r\n                    \r\n                        <br/>\r\n\r\n                        <TextField\r\n                            fullWidth\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"street\"\r\n                            label=\"Street Number\"\r\n                            type=\"text\"\r\n                            error={!!errors['number']}\r\n                            helperText={errors['number'] ? errors['number'].message : ''}\r\n                            {...register('number')}\r\n                        />\r\n                          <br/>\r\n\r\n                        <TextField\r\n                            fullWidth\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"city\"\r\n                            label=\"City\"\r\n                            type=\"text\"\r\n                            error={!!errors['city']}\r\n                            helperText={errors['city'] ? errors['city'].message : ''}\r\n                            {...register('city')}\r\n                        />\r\n                        <br/>\r\n                        <TextField\r\n                            fullWidth\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"country\"\r\n                            label=\"country\"\r\n                            type=\"text\"\r\n                            error={!!errors['country']}\r\n                            helperText={errors['country'] ? errors['country'].message : ''}\r\n                            {...register('country')}\r\n                        \r\n                        />\r\n                        <br/>\r\n                        <DialogActions>\r\n                            <Button onClick={handleClose} color=\"primary\">\r\n                                Cancel\r\n                         </Button>\r\n                            <Button\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                type=\"submit\"\r\n                            >\r\n                                Add\r\n                            </Button>\r\n\r\n                        </DialogActions>\r\n                        </Box>\r\n\r\n                </DialogContent>\r\n\r\n            </Dialog>\r\n        </div>\r\n\r\n    );\r\n                            }\r\n","\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport { editUserRequest } from \"store/user/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    getUsersSelector\r\n  } from \"store/user/selectors\";\r\n\r\nimport { useForm, SubmitHandler } from 'react-hook-form';\r\nimport {  object, string, TypeOf } from 'zod';\r\nimport { zodResolver } from '@hookform/resolvers/zod';\r\n\r\n\r\nconst registerSchema = object({\r\n    first: string()\r\n      .min(3,'First Name must be  more than 3 characters'),\r\n    last: string()\r\n      .min(3,'Last Name must be  more than 3 characters'),\r\n    email: string().min(1,'Email is required').email('Email is invalid'),\r\n    name: string()\r\n    .min(1,'Title is required'),\r\n    number: string()\r\n    .min(1,'Title is required'),\r\n    city: string()\r\n    .min(1,'Title is required'),\r\n    country: string()\r\n    .min(1,'Title is required'),\r\n  });\r\n  \r\n  \r\nexport type RegisterInput = TypeOf<typeof registerSchema>;\r\n\r\n\r\n\r\n\r\nexport default function EditUser({exsistUser}:any) {\r\n\r\n    const {\r\n        register,\r\n        formState: { errors, isSubmitSuccessful },\r\n        reset,\r\n        handleSubmit,\r\n      } = useForm<RegisterInput>({\r\n        resolver: zodResolver(registerSchema),\r\n      });\r\n    \r\n      useEffect(() => {\r\n        if (isSubmitSuccessful) {\r\n          reset();\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      }, [isSubmitSuccessful]);\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [userData, setUserData] = useState<any>({\r\n            first:'',\r\n            last:'',\r\n             email:'',\r\n            city:'',\r\n            country:'',\r\n                name:'',\r\n                number:0,\r\n                picture: exsistUser?.picture.medium,\r\n                title:exsistUser.name.title\r\n\r\n    })\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (isSubmitSuccessful) {\r\n          reset();\r\n        }\r\n      }, [isSubmitSuccessful]);\r\n\r\n    const onSubmitHandler: SubmitHandler<RegisterInput> = (values) => {\r\n        const id = exsistUser.id.value;\r\n        const data={\r\n            name:{\r\n                first:values.first,\r\n                last:values.last,\r\n                title:exsistUser.name.title\r\n\r\n            },\r\n            email:values.email,\r\n            location:{ number:values.number,\r\n                name:values.name,\r\n                city:values.city,\r\n                country:values.country},\r\n            picture:exsistUser.picture.medium,\r\n        }\r\n        dispatch(editUserRequest(id,data));\r\n        setOpen(false);\r\n      };\r\n\r\n    return (\r\n          <div>\r\n            <Button size=\"small\" onClick={handleClickOpen}>\r\n                Edit\r\n            </Button>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" fullWidth>\r\n                \r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Edit User\r\n                     </DialogContentText>\r\n\r\n                     <Box component='form'\r\n                     noValidate\r\n                    autoComplete='off'\r\n                        onSubmit={handleSubmit(onSubmitHandler)}>\r\n                        <TextField\r\n                            fullWidth\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"fName\"\r\n                            label=\"First Name\"\r\n                            type=\"text\"\r\n                            error={!!errors['first']}\r\n                            helperText={errors['first'] ? errors['first'].message : ''}\r\n                            {...register('first')}\r\n                        />\r\n                        <br/>\r\n\r\n                        <TextField\r\n                            autoFocus\r\n                            fullWidth\r\n                            margin=\"dense\"\r\n                            id=\"lName\"\r\n                            label=\"Last Name\"\r\n                            type=\"text\"\r\n                            error={!!errors['last']}\r\n                            helperText={errors['last'] ? errors['last'].message : ''}\r\n                            {...register('last')}\r\n                        />\r\n                        \r\n                        <br/>\r\n                        <TextField\r\n                            fullWidth\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"email\"\r\n                            label=\"Email\"\r\n                            type=\"text\"\r\n                            error={!!errors['email']}\r\n                            helperText={errors['email'] ? errors['email'].message : ''}\r\n                            {...register('email')}\r\n                        />\r\n                        <br/>\r\n                        <TextField\r\n                            fullWidth\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"nstreet\"\r\n                            label=\"Street Name\"\r\n                            type=\"text\"\r\n                            error={!!errors['name']}\r\n                            helperText={errors['name'] ? errors['name'].message : ''}\r\n                            {...register('name')}\r\n                        />\r\n                    \r\n                        <br/>\r\n\r\n                        <TextField\r\n                            fullWidth\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"street\"\r\n                            label=\"Street Number\"\r\n                            type=\"text\"\r\n                            error={!!errors['number']}\r\n                            helperText={errors['number'] ? errors['number'].message : ''}\r\n                            {...register('number')}\r\n                        />\r\n                          <br/>\r\n\r\n                        <TextField\r\n                            fullWidth\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"city\"\r\n                            label=\"City\"\r\n                            type=\"text\"\r\n                            error={!!errors['city']}\r\n                            helperText={errors['city'] ? errors['city'].message : ''}\r\n                            {...register('city')}\r\n                        />\r\n                        <br/>\r\n                        <TextField\r\n                            fullWidth\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"country\"\r\n                            label=\"country\"\r\n                            type=\"text\"\r\n                            error={!!errors['country']}\r\n                            helperText={errors['country'] ? errors['country'].message : ''}\r\n                            {...register('country')}\r\n                        \r\n                        />\r\n                        <br/>\r\n                        <DialogActions>\r\n                            <Button onClick={handleClose} color=\"primary\">\r\n                                Cancel\r\n                         </Button>\r\n                            <Button\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                type=\"submit\"\r\n                            >\r\n                                Edit\r\n                            </Button>\r\n\r\n                        </DialogActions>\r\n                        </Box>\r\n                </DialogContent>\r\n\r\n            </Dialog>\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n    );\r\n                            }\r\n","import * as React from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Button from '@mui/material/Button';\r\nimport Grid from '@mui/material/Grid';\r\nimport { makeStyles } from '@mui/styles';\r\n\r\n\r\nimport Typography from '@mui/material/Typography';\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getPendingSelector,\r\n  getUsersSelector,\r\n  getErrorSelector,\r\n} from \"store/user/selectors\";\r\nimport { fetchUserRequest, deleteSuccess } from \"store/user/actions\";\r\nimport { IUser } from \"store/user/types\";\r\nimport AddUser from \"./addUser\";\r\nimport EditUser from \"./editUser\"\r\n\r\nexport default function UserCard() {\r\n\r\n  const dispatch = useDispatch();\r\n  const pending = useSelector(getPendingSelector);\r\n  const users = useSelector(getUsersSelector);\r\n  const error = useSelector(getErrorSelector);\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      maxWidth: 345,\r\n    },\r\n    media: {\r\n      padding: '5px',\r\n      color: 'white',\r\n      height: 140,\r\n      backgroundSize: '50%',\r\n    },\r\n    cardCss: {\r\n      margin: '5px',\r\n      minWidth: '150px',\r\n      filter: 'drop-shadow(0px 0px 10px #3335)',\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n\r\n  const handleDelete = (id: any)=> {    \r\n    dispatch(deleteSuccess(id))\r\n};\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchUserRequest());\r\n  }, [dispatch]);\r\n  return (\r\n    <Grid>\r\n    <Grid container>\r\n    {  Object.values(users)?.map((user: any, index: number) => ( \r\n    <Grid\r\n    item\r\n    xs={12}\r\n    sm={6}\r\n    md={4}\r\n    lg={3}\r\n    className={classes.cardCss}\r\n\r\n  >\r\n    <Card className={classes.root}>\r\n      <CardMedia\r\n        component=\"img\"\r\n        className={classes.media}\r\n        image={user?.picture?.medium}\r\n      />\r\n      <CardContent>\r\n\r\n        <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n        {user?.name?.title}     {user?.name?.first}      {user?.name?.last}   \r\n        </Typography>\r\n\r\n        <Typography variant=\"body2\" color=\"text.secondary\">\r\n       {user?.email}\r\n        </Typography>\r\n\r\n        <Typography variant=\"body2\" color=\"text.secondary\">\r\n        {user?.location?.street?.number} {user?.location?.street?.name} \r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"text.secondary\">\r\n       {user?.location?.city} {user?.location?.country}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button onClick={()=>handleDelete(user?.id?.value)} size=\"small\">delete</Button>\r\n        <EditUser exsistUser={user}/>\r\n      </CardActions>\r\n    </Card>\r\n    </Grid>\r\n   ) )}\r\n   \r\n    </Grid>    <AddUser/>\r\n    </Grid>\r\n    );\r\n}\r\n","\r\nimport * as React from 'react';\r\nimport UserCard from './components/card';\r\n\r\n\r\nexport default function App(){\r\n  return (\r\n    <div>\r\n      <UserCard/>\r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\n;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport \"./index.css\";\r\nimport store from \"./store\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}